library(haven)
library(readr)
library(tidyr)
library(survival)
library(survMisc)
library(rms)
library(nomogramFormula)
library(survivalROC)
library(timeROC)
library(plyr)
select.data<-read_sav("D:/20220712desk/SCLC/SCLC.model.sav")
set.seed(133)
ind<-sample(2,nrow(select.data),replace = TRUE,prob = c(0.6,0.4))
train.data<-select.data[ind==1,]
validation.data<-select.data[ind==2,]
all.data<-data.frame(all.data)
train.data<-data.frame(train.data)
validation.data<-data.frame(validation.data)
train.data$KPS <- ifelse(train.data$KPS>2,1,0)
validation.data$KPS <- ifelse(validation.data$KPS>2,1,0)

cutnomo<-coxph(Surv(OS,status)~NLRnum,data = train.data)
cutnomo1 <- coxph(Surv(OS,status)~PLRnum,data = train.data)
cutnomo2 <- coxph(Surv(OS,status)~RDWnum,data = train.data)
cutoffnomo <- cutp(cutnomo)$NLRnum
cutoffnomo1 <- cutp(cutnomo1)$PLRnum
cutoffnomo2 <- cutp(cutnomo2)$RDWnum
train.data$NLRnum <- ifelse(train.data$NLRnum>cutoffnomo$NLRnum[1],1,0)
train.data$PLRnum <- ifelse(train.data$PLRnum>cutoffnomo1$PLRnum[1],1,0)
train.data$RDWnum <- ifelse(train.data$RDWnum>cutoffnomo2$RDWnum[1],1,0)
validation.data$NLRnum <- ifelse(validation.data$NLRnum>cutoffnomo$NLRnum[1],1,0)
validation.data$PLRnum <- ifelse(validation.data$PLRnum>cutoffnomo1$PLRnum[1],1,0)
validation.data$RDWnum <- ifelse(validation.data$RDWnum>cutoffnomo2$RDWnum[1],1,0)

outTab=data.frame()
UnicoX <- function(x){
  FML <- as.formula(paste0("Surv(OS,status)~",x))
  diff=coxph(FML,data = train.data)
  diff_data <- summary(diff)
  Pvalue=round(diff_data$coefficients[,5],3)
  HR=round(diff_data$coefficients[,2],3)
  HR_L=round(diff_data$conf.int[,3],3)
  HR_H=round(diff_data$conf.int[,4],3)
  HR_result=paste0(HR,"(",HR_L,"-",HR_H,")")
  scoxname <- rownames(data.frame(diff$coefficients))
  Unicox <- data.frame("Characteristics"=scoxname,
                       "HR (95%CI)"=HR_result,
                       "P value"=Pvalue,
                       "varname"=x)
  return(Unicox)
}
Varnames <- colnames(train.data[,c(1:41)])
UniVar <- lapply(Varnames, UnicoX)
UniVar <- ldply(UniVar,data.frame)
#multivariable
Multiname <- unique(paste0(UniVar$varname[UniVar$P.value<0.05]))
fml <- as.formula(paste0("Surv(OS,status)~",paste0(Multiname,collapse = "+")))
MultiCox <- coxph(fml,data = train.data)
scox <- step(MultiCox)
diff_data <- summary(scox)
scoxname <- rownames(data.frame(scox$coefficients))
Pvalue=round(diff_data$coefficients[,5],3)
HR=round(diff_data$coefficients[,2],3)
HR_L=round(diff_data$conf.int[,3],3)
HR_H=round(diff_data$conf.int[,4],3)
HR_result=paste0(HR,"(",HR_L,"-",HR_H,")")
Mulcox <- data.frame("Characteristics"=scoxname,
                     "Hazard Ratio (95%CI)"=HR_result,
                     "P value"=Pvalue)
Final <- merge.data.frame(UniVar,Mulcox,by="Characteristics",all = T,sort = T)
scoxname <- rownames(data.frame(anova(scox)))[-1]
dd<-datadist(train.data)
options(datadist = 'dd')
fml <- as.formula(paste0("Surv(OS,status)~",paste0(scoxname,collapse = "+")))
scox <- cph(fml,data = train.data,surv = T)
library(stringr)
surv <- Survival(scox)
surv1 <- function(x)surv(1*6,lp=x)
surv2 <- function(x)surv(1*12,lp=x)
surv3 <- function(x)surv(1*24,lp=x)
nom1<-nomogram(scox,fun=list(surv3),lp = F,
               funlabel=c(
                 '24-Month survival probability'),
               maxscale=100,
               fun.at=c('0.9','0.85','0.80','0.70','0.6',
                        '0.5','0.4','0.3','0.2','0.1'))
nomoscore<-formula_rd(nomogram = nom1)
scoxcoefficients<-data.frame(scox$coefficients)
x1 <- list(rownames(scoxcoefficients))
for (k in unique(str_sub(row.names(scoxcoefficients),1,-3))) {
  k_num <- which(colnames(train.data)==k)
  train.data[,k_num] <- as.factor(train.data[,k_num])
  validation.data[,k_num] <- as.factor(validation.data[,k_num])
}
train.data$cao.nomosco<-points_cal(nomoscore$formula,rd=train.data)
validation.data$cao.nomosco<-points_cal(nomoscore$formula,rd=validation.data)

#train-calibration
dd<-datadist(train.data)
options(datadist = 'dd')
trainnomo<-cph(Surv(OS,status)~cao.nomosco,x=T,y=T,
               data = train.data,surv = T,time.inc = 24)
cal <- calibrate(trainnomo, cmethod='KM', method='boot', u=24, m=100, B=1000)
#validation-calibration
dd<-datadist(validation.data)
options(datadist = 'dd')
validationnomo<-cph(Surv(OS,status)~cao.nomosco,x=T,y=T,
                    data = validation.data,surv = T,time.inc = 24)
cal1 <- calibrate(validationnomo, cmethod='KM', method='boot', u=24, m=100, B=1000)
plot(cal,lwd = 2,
     lty = 1,
     errbar.col = c("#2166AC"),
     # bty = "l",
     xlim = c(0,1),ylim= c(0,1),
     xlab = "Nomogram-prediced OS (%)",ylab = "Observed OS (%)",
     col = c("#2166AC"),
     cex.lab=1.2,cex.axis=1, cex.main=1.2, cex.sub=0.6)
lines(cal[,c('mean.predicted',"KM")],
      type = 'b', lwd = 2, col = c("#2166AC"), pch = 16)
mtext("")

plot(cal1,lwd = 2,lty = 1,errbar.col = c("#B2182B"),
     xlim = c(0,1),ylim= c(0,1),col = c("#B2182B"),add = T)
lines(cal1[,c('mean.predicted',"KM")],
      type = 'b', lwd = 2, col = c("#B2182B"), pch = 16)

abline(0,1, lwd = 2, lty = 3, col = c("#224444"),pch = 8)

legend("topleft",
       legend = c("5-year","8-year"),
       col =c("#2166AC","#B2182B"), 
       lwd = 2,
       cex = 1.2,
       bty = "n")
#ROC
roc.train <- timeROC(T = train.data$OS,delta = train.data$status,marker = train.data$cao.nomosco,cause = 1,times = c(6,12,18,24,30,36),iid = T)
roc.validation <- timeROC(T = validation.data$OS,delta = validation.data$status,marker = validation.data$cao.nomosco,cause = 1,times = c(6,12,18,24,30,36),iid = T)

cindex_train <- 0
cindex_validation <- 0
set.seed(1)
K_folds=5
train.data$random_num <- sample(1:nrow(train.data),nrow(train.data),replace=F)
train.data$group <- train.data$random_num %% K_folds+1
model_roc <- data.frame()
for (i in min(train.data$group):max(train.data$group)) {
  data.validation <- subset(train.data,train.data$group==i)
  data.train <- subset(train.data,train.data$group!=i)
  auc <- timeROC(T = data.train$OS,delta = data.train$status,marker = data.train$cao.nomosco,cause = 1,times = 24,iid = T)
  train.roc <- round(auc$AUC[[2]],3)
  auc <- timeROC(T = data.validation$OS,delta = data.validation$status,marker = data.validation$cao.nomosco,cause = 1,times = 24,iid = T)
  validation.roc <- round(auc$AUC[[2]],3)
  cindex_train[i] <- train.roc
  cindex_validation[i] <- validation.roc
  
}
model_roc <- data.frame("Training roc"=cindex_train,
                        "Vlidation roc"=cindex_validation)
summary(model_roc)
